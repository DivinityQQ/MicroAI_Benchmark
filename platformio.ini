; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev_fast

[env]
framework = arduino
monitor_speed = 115200
extra_scripts = 
;	scripts/memory_collector.py
;	scripts/collect_benchmark.py

; ESP32 Base
[esp32dev_common]
platform = espressif32@6.9.0
board = esp32dev
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
; board_build.f_cpu = 240000000L
; board_build.f_flash = 80000000L
build_flags = 
    -I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:esp32dev_small]
extends = esp32dev_common
build_flags = 
	${esp32dev_common.build_flags}
	-l TensorFlow_Lite_CMSIS_NN_ESP32_Os_LowKmaxEvents

[env:esp32dev_fast]
extends = esp32dev_common
build_unflags = -Os
build_flags = 
	${esp32dev_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_CMSIS_NN_ESP32_Ofast_LowKmaxEvents

; ESP32-S3 Base
[esp32-s3-devkitm-1_common]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
board = esp32-s3-devkitm-1
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
; board_build.f_cpu = 240000000L
build_unflags = -DTF_LITE_STATIC_MEMORY
build_flags = 
	-DCORE_DEBUG_LEVEL=5
	-DESP_NN
	-DCONFIG_NN_OPTIMIZED
	-DARCH_ESP32_S3
    -I tflm_headers/TensorFlow_Lite_ESP_NN
    -L precompiled_lib

[env:esp32-s3-devkitm-1_small]
extends = esp32-s3-devkitm-1_common
build_flags = 
	${esp32-s3-devkitm-1_common.build_flags}
	-l TensorFlow_Lite_ESP_NN_ESP32_S3_Os

[env:esp32-s3-devkitm-1_fast]
extends = esp32-s3-devkitm-1_common
build_unflags = 
	${esp32-s3-devkitm-1_common.build_unflags}
	-Os
build_flags = 
	${esp32-s3-devkitm-1_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_ESP_NN_ESP32_S3_Ofast

; ESP32-C6 Base
[esp32-c6-devkitc-1_common]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
board = esp32-c6-devkitc-1
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
; board_build.f_cpu = 160000000L
build_flags = 
    -I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:esp32-c6-devkitc-1_small]
extends = esp32-c6-devkitc-1_common
build_flags = 
	${esp32-c6-devkitc-1_common.build_flags}
	-l TensorFlow_Lite_CMSIS_NN_ESP32_C6_Os

[env:esp32-c6-devkitc-1_fast]
extends = esp32-c6-devkitc-1_common
build_unflags = -Os
build_flags = 
	${esp32-c6-devkitc-1_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_CMSIS_NN_ESP32_C6_Ofast

; ESP32-P4 Base
[esp32-p4-evboard_common]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
board = esp32-p4-evboard
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
; board_build.f_cpu = 360000000L
build_unflags = -DTF_LITE_STATIC_MEMORY
build_flags = 
	-DCORE_DEBUG_LEVEL=5
	-DESP_NN
    -DCONFIG_NN_OPTIMIZED
	-DARCH_ESP32_P4
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
	-I tflm_headers/TensorFlow_Lite_ESP_NN
    -L precompiled_lib

[env:esp32-p4-evboard_small]
extends = esp32-p4-evboard_common
build_flags = 
	${esp32-p4-evboard_common.build_flags}
	-l TensorFlow_Lite_ESP_NN_ESP32_P4_Os

[env:esp32-p4-evboard_fast]
extends = esp32-p4-evboard_common
build_unflags = 
	${esp32-p4-evboard_common.build_unflags}
	-Os
build_flags = 
	${esp32-p4-evboard_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_ESP_NN_ESP32_P4_Ofast

; Raspberry Pi Pico W Base
[picow_common]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = rpipicow
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
; board_build.f_cpu = 133000000L
build_flags = 
    -I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:picow_small]
extends = picow_common
build_flags = 
	${picow_common.build_flags}
	-l TensorFlow_Lite_CMSIS_NN_picow_Os

[env:picow_fast]
extends = picow_common
build_unflags = -Os
build_flags = 
	${picow_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_CMSIS_NN_picow_Ofast

; Arduino Nano 33 BLE Base
[nano33ble_common]
platform = nordicnrf52
board = nano33ble
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
build_unflags = -mfloat-abi=soft
build_flags = 
    -I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:nano33ble_small]
extends = nano33ble_common
build_unflags = ${nano33ble_common.build_unflags}
build_flags = 
	${nano33ble_common.build_flags}
	-l TensorFlow_Lite_CMSIS_NN_nano_33_BLE_Os

[env:nano33ble_fast]
extends = nano33ble_common
build_unflags = 
	${nano33ble_common.build_unflags}
	-Os
build_flags = 
	${nano33ble_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_CMSIS_NN_nano_33_BLE_Ofast

; Teensy 4.0 Base
[teensy40_common]
platform = teensy@5.0.0
board = teensy40
upload_protocol = teensy-cli
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
build_flags = 
    -I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:teensy40_small]
extends = teensy40_common
build_flags = 
	${teensy40_common.build_flags}
	-DTEENSY_OPT_SMALLEST_CODE_LTO
	-l TensorFlow_Lite_CMSIS_NN_Teensy_40_Smallest_LTO

[env:teensy40_fast]
extends = teensy40_common
build_flags = 
	${teensy40_common.build_flags}
	-DTEENSY_OPT_FASTEST_LTO
	-l TensorFlow_Lite_CMSIS_NN_Teensy_40_Fastest_LTO

; STM32 Nucleo L552ZE-Q Base
[nucleo_l552ze_q_common]
platform = ststm32@19.0.0
board = nucleo_l552ze_q
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
build_flags = 
    -I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:nucleo_l552ze_q_small]
extends = nucleo_l552ze_q_common
build_flags = 
	${nucleo_l552ze_q_common.build_flags}
	-l TensorFlow_Lite_CMSIS_NN_L552ZE-Q_Os

[env:nucleo_l552ze_q_fast]
extends = nucleo_l552ze_q_common
build_unflags = -Os
build_flags = 
	${nucleo_l552ze_q_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_CMSIS_NN_L552ZE-Q_Ofast

; STM32 Nucleo F207ZG Base
[nucleo_f207zg_common]
platform = ststm32@19.0.0
board = nucleo_f207zg
lib_ignore = 
	TensorFlow_Lite_ESP_NN
	TensorFlow_Lite_CMSIS_NN
build_flags = 
	-I tflm_headers/TensorFlow_Lite_CMSIS_NN
    -L precompiled_lib

[env:nucleo_f207zg_small]
extends = nucleo_f207zg_common
build_flags = 
	${nucleo_f207zg_common.build_flags}
	-l TensorFlow_Lite_CMSIS_NN_F207ZG_Os

[env:nucleo_f207zg_fast]
extends = nucleo_f207zg_common
build_unflags = -Os
build_flags = 
	${nucleo_f207zg_common.build_flags}
	-Ofast
	-l TensorFlow_Lite_CMSIS_NN_F207ZG_Ofast